# Decisivis Core - Environment Configuration Example
# SECURITY: Copy this file to .env and replace with real values
# NEVER commit .env file with real credentials

# ===== DATABASE =====
# PostgreSQL connection string (required)
DATABASE_URL=postgres://username:password@host:port/database?sslmode=require

# ===== AUTHENTICATION =====
# JWT secret for token generation (generate with: openssl rand -base64 64)
JWT_SECRET=your-jwt-secret-key-generate-a-secure-random-string

# API key for service-to-service auth (generate with: openssl rand -base64 32)
API_KEY=your-api-key-generate-a-secure-random-string

# Model access password (required to use prediction/training)
MODEL_ACCESS_PASSWORD=your-secure-model-password

# Admin credentials for dashboard
ADMIN_USERNAME=admin
ADMIN_PASSWORD_HASH=your-hashed-password-use-argon2

# NextAuth secret for session management
NEXTAUTH_SECRET=your-nextauth-secret-generate-a-secure-random-string

# ===== REDIS/CACHE (Optional) =====
REDIS_URL=redis://username:password@host:port
KV_REST_API_URL=https://your-redis-rest-url
KV_REST_API_TOKEN=your-redis-token

# ===== EXTERNAL APIs (Optional) =====
# Football data APIs
FOOTBALL_API_KEY=your-football-api-key
ODDS_API_KEY=your-odds-api-key

# AI/ML APIs
GEMINI_API_KEY=your-gemini-api-key
GEMINI_MODEL=gemini-pro
GEMINI_TEMPERATURE=0.1

# ===== APPLICATION =====
# Environment: development | production
ENVIRONMENT=development
DEBUG=False
LOG_LEVEL=INFO

# Railway/Vercel URLs
PYTHON_API_URL=https://your-api.railway.app
NEXTAUTH_URL=https://your-app.vercel.app

# ===== SECURITY SETTINGS =====
# Allow missing env vars (only for development)
ALLOW_MISSING_ENV=false

# CORS origins (comma-separated)
ALLOWED_ORIGINS=http://localhost:3000,https://your-app.vercel.app

# Rate limiting
RATE_LIMIT_REQUESTS=10
RATE_LIMIT_PERIOD=60

# ===== MODEL CONFIGURATION =====
# Performance targets
TARGET_ACCURACY=0.70
TARGET_RESPONSE_TIME_MS=100

# Retraining settings
RETRAINING_INTERVAL_DAYS=7
MIN_MATCHES_FOR_RETRAINING=50

# ===== DEPLOYMENT =====
# Port for local development
API_PORT=8000
API_HOST=0.0.0.0

# Monitoring
ENABLE_MONITORING=true
ALERT_EMAIL=admin@example.com

# ===== IMPORTANT SECURITY NOTES =====
# 1. Generate all secrets using cryptographically secure methods
# 2. Use different passwords for each environment
# 3. Rotate credentials regularly
# 4. Never use default passwords in production
# 5. Enable 2FA where possible
# 6. Monitor for unauthorized access
# 7. Use environment-specific .env files (.env.development, .env.production)

# To generate secure passwords/keys:
# - Password: openssl rand -base64 32
# - JWT Secret: openssl rand -base64 64
# - API Key: python -c "import secrets; print(secrets.token_urlsafe(32))"
# - Hash password: python -c "from passlib.context import CryptContext; print(CryptContext(schemes=['argon2']).hash('your-password'))"